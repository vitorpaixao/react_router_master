{
  "_args": [
    [
      {
        "raw": "gulp-bro@^1.0.2",
        "scope": null,
        "escapedName": "gulp-bro",
        "name": "gulp-bro",
        "rawSpec": "^1.0.2",
        "spec": ">=1.0.2 <2.0.0",
        "type": "range"
      },
      "/Users/vitorpaixao/server/github/react_router_master"
    ]
  ],
  "_from": "gulp-bro@>=1.0.2 <2.0.0",
  "_id": "gulp-bro@1.0.2",
  "_inCache": true,
  "_location": "/gulp-bro",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/gulp-bro-1.0.2.tgz_1487507181227_0.7574449910316616"
  },
  "_npmUser": {
    "name": "ngryman",
    "email": "ngryman@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gulp-bro@^1.0.2",
    "scope": null,
    "escapedName": "gulp-bro",
    "name": "gulp-bro",
    "rawSpec": "^1.0.2",
    "spec": ">=1.0.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-bro/-/gulp-bro-1.0.2.tgz",
  "_shasum": "e56e060f3b9fde1809902ba7b2791df0d9c42b70",
  "_shrinkwrap": null,
  "_spec": "gulp-bro@^1.0.2",
  "_where": "/Users/vitorpaixao/server/github/react_router_master",
  "author": {
    "name": "Nicolas Gryman",
    "email": "ngryman@gmail.com",
    "url": "http://ngryman.sh/"
  },
  "bugs": {
    "url": "https://github.com/ngryman/gulp-bro/issues"
  },
  "dependencies": {
    "browserify": "^14.0.0",
    "browserify-incremental": "^3.1.1",
    "concat-stream": "^1.5.2",
    "gulp-util": "^3.0.7",
    "through2": "^2.0.1"
  },
  "description": "gulp + browserify + incremental build, done right.",
  "devDependencies": {
    "ava": "^0.18.1",
    "babel-preset-es2015": "^6.18.0",
    "babelify": "^7.2.0",
    "catch-stdout": "0.0.1",
    "chokidar": "^1.6.1",
    "codecov.io": "^0.1.6",
    "contributor-faces": "^1.0.0",
    "eslint": "^3.10.2",
    "eslint-config-ngryman": "^1.7.0",
    "nyc": "^10.0.0",
    "pre-commit": "^1.1.2",
    "stream-assert": "^2.0.3",
    "vinyl-fs": "^2.4.4"
  },
  "directories": {},
  "dist": {
    "shasum": "e56e060f3b9fde1809902ba7b2791df0d9c42b70",
    "tarball": "https://registry.npmjs.org/gulp-bro/-/gulp-bro-1.0.2.tgz"
  },
  "eslintConfig": {
    "extends": "ngryman"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "3df588b07fcd88e4b2823903af0bd3bc53424f3c",
  "homepage": "https://github.com/ngryman/gulp-bro#readme",
  "keywords": [
    "browserify",
    "gulp",
    "recipe",
    "simple",
    "stream",
    "task",
    "watchify"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ngryman",
      "email": "ngryman@gmail.com"
    }
  ],
  "name": "gulp-bro",
  "optionalDependencies": {},
  "precommit": [
    "check-coverage",
    "test",
    "contributors"
  ],
  "readme": "<p align=\"center\">\n  <img alt=\"Gulp Bro\" src=\"https://raw.githubusercontent.com/ngryman/artworks/master/gulp-bro/heading/gulp-bro-2x.png\" width=\"228\">\n</p>\n\n<p align=\"center\">\n  gulp + browserify + incremental build, done right.\n</p>\n\n<p align=\"center\">\n  <a href=\"//travis-ci.org/ngryman/gulp-bro\">\n    <img alt=\"Build Status\" src=\"https://img.shields.io/travis/ngryman/gulp-bro.svg\">\n  </a>\n  <a href=\"//codecov.io/github/ngryman/gulp-bro\">\n    <img alt=\"Coverage\" src=\"https://img.shields.io/codecov/c/github/ngryman/gulp-bro.svg\">\n  </a>\n</p>\n\n---\n\nEven through **gulp** has [recipes] to make things work, configuring **browserify** needs too much boilerplate and understanding about how things work.\n**gulp-bro** looks like any other *gulp* plugin, it does the exact same thing you can do manually, but hides the *ugly* stuff for you.\n\nIt also support [incremental build] out of the box, so you don't have to mess with *watchify* again.\n\n[recipes]: https://github.com/gulpjs/gulp/tree/master/docs/recipes\n[incremental build]: https://github.com/jsdf/browserify-incremental\n\n## Install\n\n```bash\nnpm install --save-dev gulp-bro\n```\n\n## Usage\n\n### Simple build\n\n```javascript\ngulp.task('build', () =>\n  gulp.src('app.js')\n    .pipe(bro())\n    .pipe(gulp.dest('dist'))\n)\n\ngulp.watch('*.js', ['build'])\n```\n\n*Subsequent calls to `build` will be fast thanks to incremental build.*\n\n### Browserify transforms\n\n```javascript\ngulp.task('build', () =>\n  gulp.src('app.js')\n    .pipe(bro({\n      transform: [\n        babelify.configure({ presets: ['es2015'] }),\n        [ 'uglifyify', { global: true } ]\n      ]\n    })\n    .pipe(gulp.dest('dist')\n)\n```\n\n### Multiple bundles\n\n```javascript\ngulp.task('build', () =>\n  gulp.src('*.js')\n    .pipe(bro())\n    .pipe(gulp.dest('dist')\n)\n```\n\n## API\n\n`bro([options], [callback])`\n\n### `options` <sup><sub>`{object}`</sub></sup>\n\nExcept `error`, options are directly passed to *browserify*. So you can use *bro* as if you were using *browerify*. Here is a list of all [available options](https://github.com/substack/node-browserify#browserifyfiles--opts).\n\n#### `error` <sup><sub>`{'emit'|function}`</sub></sup>\n\nAnother pitfall of using *browerify* manually was that error reporting had to be done manually too or you ended up with a huge callstack and a crashed process.\nBy default, *bro* reports nicely formatted errors:\n\n![](https://raw.githubusercontent.com/ngryman/artworks/master/gulp-bro/medias/error-reporting.png)\n\nYou can customize things in 2 ways:\n\n - Set `emit` which will cause *bro* to emit the error, so you can catch it with `on('error')`.\n - Set a callback that will handle the error.\n\n## FAQ\n\n### What is incremental build?\n\nIf you use vanilla *browserify* with *gulp*, you end up with long compile times if you watch for changes. The reason is that each time a new *browserify* instance is created and has to parse and compile the whole bundle. Even if only one file has changed, the whole bundle is processed.\n\nUsually you use *watchify* to improve this, and only recompile files that have changed. The only problem with *watchify* is that it monitors file changes on its own and needs a lot of boilerplate to integrate with *gulp*, precisely because of this.\n\n*gulp* already provide a file watch mechanism that we can use out of the box. *bro* caches already compiled files and only recompile changes. So you can call repeatedly `bro` with optimal compile times.\n\n## Contributors\n\n[//]: contributor-faces\n<a href=\"https://github.com/ngryman\"><img src=\"https://avatars.githubusercontent.com/u/892048?v=3\" title=\"ngryman\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/DylanPiercey\"><img src=\"https://avatars.githubusercontent.com/u/4985201?v=3\" title=\"DylanPiercey\" width=\"80\" height=\"80\"></a>\n<a href=\"https://github.com/shannonmoeller\"><img src=\"https://avatars.githubusercontent.com/u/155164?v=3\" title=\"shannonmoeller\" width=\"80\" height=\"80\"></a>\n[//]: contributor-faces\n\n<sup>Generated with [contributors-faces](https://github.com/ngryman/contributor-faces).</sup>\n\n## License\n\nMIT Â© [Nicolas Gryman](http://ngryman.sh)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ngryman/gulp-bro.git"
  },
  "scripts": {
    "check-coverage": "nyc check-coverage --lines 95 --functions 95 --branches 95",
    "contributors": "contributor-faces --exclude '*-bot'",
    "coverage": "nyc report --reporter=text-lcov | codecov",
    "see-coverage": "nyc report --reporter=html && open coverage/index.html",
    "test": "eslint {,test/}*.js && nyc ava"
  },
  "version": "1.0.2"
}
